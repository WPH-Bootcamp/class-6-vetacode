@use '../variables' as *;
@use 'sass:map';

// add the logic here
// use if else to check if the type and level are valid
// if they are valid, return the color
// if they are not valid warn 'Invalid color type or level' and return null
// null is a special value in Sass that means nothing, and it is used to represent the absence of a value, you need to return null if the type or level is not valid

// @function get-color($type, $level) {
//   // Check if the color type exists in the map
//   @if map.has-key($colors, $type) {
//     $color-map: map.get($colors, $type);

//     // Check if the level exists within that color type
//     @if map.has-key($color-map, $level) {
//       @return map.get($color-map, $level);
//     }
//     else {
//       @warn "Invalid level: #{$level} for type: #{$type}";
//       @return null;
//     }
//   }

// }

@function get-color($type, $level) {
  @if map.has-key($colors, $type) {
    $color-map: map.get($colors, $type);

    @if map.has-key($color-map, $level) {
      @return map.get($color-map, $level);
    } @else {
      @warn "Level '#{$level}' not found for type '#{$type}'.";
      @return null;
    }
  } @else {
    @warn "Color type '#{$type}' not found.";
    @return null;
  }
}

$colors: (
  'brand': (
    '400': #007bff,
    '500': #0056b3,
  ),
  'warning': (
    '400': #ffc107,
    '600': #ff9800,
  ),
  'error': (
    '500': #dc3545,
  ),
  'success': (
    '700': #28a745,
  ),
  'gray': (
    '600': #6c757d,
  ),
);
